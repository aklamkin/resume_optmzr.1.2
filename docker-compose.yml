version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: resumeai-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    environment:
      - MONGO_INITDB_DATABASE=resumeai
    networks:
      - resumeai-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resumeai-backend
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - MONGO_URL=mongodb://mongodb:27017/resumeai
      - DB_NAME=resumeai
      - HOST=0.0.0.0
      - PORT=8001
    volumes:
      - ./backend:/app
      - backend_cache:/root/.cache
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - resumeai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL:-http://localhost:8080}
    container_name: resumeai-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL:-http://localhost:8080}
      - NODE_ENV=production
    volumes:
      - ./frontend/src:/app/src
      - frontend_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - resumeai-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:stable-alpine
    container_name: resumeai-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - resumeai-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  resumeai-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  backend_cache:
    driver: local
  frontend_modules:
    driver: local
